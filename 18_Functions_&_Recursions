"""
A function is a group of statements performing a specific task. 
When a program gets bigger in size and its complexity grows, it gets difficult for a 
program to keep track on which piece of code is doing what! 

A function can be reused by the programmer in a given program any number of 

EXAMPLE AND SYNTAX OF A FUNCTION 
The syntax of a function looks as follows: 
def func1(): 
print('hello') 

This function can be called any number of times, anywhere in the program. 
FUNCTION CALL 
Whenever we want to call a function, we put the name of the function followed by 
parentheses as follows: 
func1() # This is called function call. 

FUNCTION DEFINITION 
The part containing the exact set of instructions which are executed during the function 
call. 

"""

#example
def func1():
    n = input("Enter Your name :")
    name= n.capitalize()
    print(f"Hello {name}")

func1()




"""
FUNCTIONS WITH ARGUMENTS 


A function can accept some value it can work with. We can put these values in the 
parentheses. 
A function can also return value as shown below: 
"""
n = input("Enter Your name :")
na = n.capitalize()
def greet(name):  
    print(f"Hello {name} Have a Good Day.")

greet(na)






"""
DEFAULT PARAMETER VALUE 
We can have a value as default as default argument in a function. 
If we specify name = “stranger” in the line containing def, this value is used when no 
argument is passed. 

Example: 
def greet(name = "stranger"):               #default parameter value should be return in "" 
    print(f"Hello {name} Have a Good Day.")  
greet() # name will be "stranger" in function body (default) 
greet("harry") # name will be "harry" in function body (passed) 
"""

n = input("Enter Your name :")
na = n.capitalize()
def greet(name = "Sir/Madam"):  
    print(f"Hello {name} Have a Good Day.")
    
greet(na)
greet()      
""" Output
Enter Your name :harsh
Hello Harsh Have a Good Day.
Hello Sir/Madam Have a Good Day.
"""
